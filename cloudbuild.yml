steps:
# Containerize (includes testing)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: /bin/sh
    args:
      - '-c'
      - 'echo "GCR_HOSTNAME: $_GCR_HOSTNAME, PROJECT_ID: $PROJECT_ID, REPO_NAME: $REPO_NAME, SERVICE_NAME: $_SERVICE_NAME, COMMIT_SHA: $COMMIT_SHA"'
    id: Print Variables
  - name: gcr.io/cloud-builders/docker
    args: 
    - 'build'
    - '--no-cache'
    - '-t'
    - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/backend:$COMMIT_SHA'
    - '--file'
    - './blog/Dockerfile'
    - "./blog"
    allowFailure: false
    timeout: 300s
    id: Containerize & Test Backend

  - name: gcr.io/cloud-builders/docker
    args: 
    - 'build'
    - '--no-cache'
    - '-t'
    - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/frontend:$COMMIT_SHA'
    - '--file'
    - './frontend/frontend.dockerfile'
    - "./frontend"
    allowFailure: false
    timeout: 300s
    id: Containerize & Test Frontend

# Push images to registery
  - name: gcr.io/cloud-builders/docker
    args: ['push', '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/backend:$COMMIT_SHA']
    id: Push Backend Container to Registery

  - name: gcr.io/cloud-builders/docker
    args: ['push', '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/frontend:$COMMIT_SHA']
    id: Push Frontend Container to Registery

# Deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: gcloud
    args:
    - deploy
    - $_SERVICE_NAME
    - '--platform=managed'
    - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/backend:$COMMIT_SHA'
    - >-
      --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
    - '--region=$_DEPLOY_REGION'
    - '--quiet'
    id: Deploy Backend
  
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: gcloud
    args:
    - deploy
    - $_SERVICE_NAME
    - '--platform=managed'
    - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME/frontend:$COMMIT_SHA'
    - >-
      --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
    - '--region=$_DEPLOY_REGION'
    - '--quiet'
    id: Deploy Frontend


  # Slackbot Notification on Success
  - name: 'curlimages/curl:7.78.0'
    args:
      - '-X'
      - POST
      - '-H'
      - 'Content-Type: application/json'
      - '-d'
      - |
        {
          "projectId": "$PROJECT_ID",
          "id": "$BUILD_ID",
          "status": "SUCCESS"
        }
      - 'https://us-central1-blog-pipe.cloudfunctions.net/notifySlack'
    id: Notify Slack Success
    waitFor:
      - Deploy Backend
      - Deploy Frontend

  # Slackbot Notification on Failure
  - name: 'curlimages/curl:7.78.0'
    args:
      - '-X'
      - POST
      - '-H'
      - 'Content-Type: application/json'
      - '-d'
      - |
        {
          "projectId": "$PROJECT_ID",
          "id": "$BUILD_ID",
          "status": "FAILURE"
        }
      - 'https://us-central1-blog-pipe.cloudfunctions.net/notifySlack'
    id: Notify Slack Failure
    waitFor:
      - Deploy Backend
      - Deploy Frontend
    allowFailure: true

timeout: 500s
