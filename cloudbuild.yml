steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
      - '--file'
      - blog/Dockerfile
      - blog
    id: Containerize & Test Backend
    waitFor:
      - '-'
    timeout: 300s
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - '--file'
      - frontend/frontend.dockerfile
      - frontend
    id: Containerize & Test Frontend
    waitFor:
      - '-'
    timeout: 300s
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
    id: Push Backend
    waitFor:
      - Containerize & Test Backend
      - Containerize & Test Frontend
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push Frontend
    waitFor:
      - Containerize & Test Backend
      - Containerize & Test Frontend

  - name: 'gcr.io/cloud-builders/docker'
    id: Deploy Backend Wrapper
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        gcloud run services update $_SERVICE_NAME-backend --platform=managed \
            --image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA \
            --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID \
            --region=$_DEPLOY_REGION --quiet
        echo $? > backend_exit_code.txt
    waitFor:
      - Push Backend

  - name: 'gcr.io/cloud-builders/docker'
    id: Deploy Frontend Wrapper
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        gcloud run services update $_SERVICE_NAME --platform=managed \
            --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA \
            --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID \
            --region=$_DEPLOY_REGION --quiet
        echo $? > frontend_exit_code.txt
    waitFor:
      - Push Frontend

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: Notify Slack
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        backend_exit_code=$(cat backend_exit_code.txt)
        frontend_exit_code=$(cat frontend_exit_code.txt)
        ./send_slack_notification.sh $backend_exit_code $frontend_exit_code
    waitFor:
      - Deploy Backend Wrapper
      - Deploy Frontend Wrapper




images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
  - >-
    $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _PLATFORM: managed
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _SERVICE_NAME: zenith
  _DEPLOY_REGION: us-central1
  _GCR_HOSTNAME: us.gcr.io
  _TRIGGER_ID: bc8f33b4-744d-4d6a-b59c-e863024b2504
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - zenith-backend
