steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
      - '--file'
      - blog/Dockerfile
      - blog
    id: Containerize & Test Backend
    waitFor:
      - '-'
    timeout: 300s
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - '--file'
      - frontend/frontend.dockerfile
      - frontend
    id: Containerize & Test Frontend
    waitFor:
      - '-'
    timeout: 300s
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
    id: Push Backend
    waitFor:
      - Containerize & Test Backend
      - Containerize & Test Frontend
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push Frontend
    waitFor:
      - Containerize & Test Backend
      - Containerize & Test Frontend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME-backend
      - '--platform=managed'
      - >-
        --image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy Backend
    waitFor:
      - Push Backend
    entrypoint: gcloud
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy Frontend
    waitFor:
      - Push Frontend
    entrypoint: gcloud

  - name: 'curlimages/curl:7.78.0'
    args:
      - '--fail' # This flag causes curl to return an error on HTTP 4xx and 5xx status codes
      - '-X'
      - 'POST'
      - '-H'
      - 'Content-Type: application/json'
      - '-d'
      - '{"buildId":"$BUILD_ID","projectId":"$PROJECT_ID","stepId":"Deploy Frontend and Backend","status":"SUCCESS","isFinalStep":true}'
      - 'https://us-central1-blog-pipe.cloudfunctions.net/notifySlack'
    id: Notify Slack on Deployment Success
    waitFor:
      - Deploy Frontend
      - Deploy Backend
    entrypoint: curl
  - name: 'curlimages/curl:7.78.0'
    args:
      - '--fail' # This flag causes curl to return an error on HTTP 4xx and 5xx status codes
      - '-X'
      - 'POST'
      - '-H'
      - 'Content-Type: application/json'
      - '-d'
      - '{"buildId":"$BUILD_ID","projectId":"$PROJECT_ID","stepId":"Deploy Frontend and Backend","status":"FAILURE","isFinalStep":true}'
      - 'https://us-central1-blog-pipe.cloudfunctions.net/notifySlack'
    id: Notify Slack on Deployment Failure
    waitFor:
      - Deploy Frontend
      - Deploy Backend
    entrypoint: curl



images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME-backend:$COMMIT_SHA'
  - >-
    $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _PLATFORM: managed
  _AR_HOSTNAME: us-central1-docker.pkg.dev
  _SERVICE_NAME: zenith
  _DEPLOY_REGION: us-central1
  _GCR_HOSTNAME: us.gcr.io
  _TRIGGER_ID: bc8f33b4-744d-4d6a-b59c-e863024b2504
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - zenith-backend
